<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6" Class="mr-3 mb-n1">
            Dialog Title
        </MudText>
    </TitleContent>
    <DialogContent>
        <EditForm Model="@weatherForecast" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <MudGrid>
                <MudItem xs="12" sm="16">
                    <MudCard>
                        <MudCardContent>
                            <MudTextField @bind-Value="weatherForecast.Date" Label="Date" For="@(() => weatherForecast.Date)" ReadOnly="false" />
                            <MudTextField @bind-Value="weatherForecast.Summary" Label="Summary" For="@(() => weatherForecast.Summary)" ReadOnly="false" />
                            <MudTextField @bind-Value="weatherForecast.TemperatureC" Label="TemperatureC" For="@(() => weatherForecast.TemperatureC)" ReadOnly="false" />

                        </MudCardContent>
                        <MudCardActions Class="justify-end">
                            <MudButton OnClick="Cancel">Cancel</MudButton>
                            <MudButton ButtonType="ButtonType.Submit">Add</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            </MudGrid>
        </EditForm>
    </DialogContent>
    <DialogActions>
        @*         <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton> *@
    </DialogActions>
</MudDialog>



@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; } = default!;
    [Parameter]
    public WeatherForecast weatherForecast { get; set; } = new WeatherForecast();


    private void OnValidSubmit(EditContext context)
    {
        MudDialog.Close(DialogResult.Ok(true));
    }
    private void Cancel() => MudDialog.Cancel();
}
